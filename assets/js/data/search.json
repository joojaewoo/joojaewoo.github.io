[ { "title": "[ToyProject] 카카오톡 클론 프로젝트(6)", "url": "/posts/kakao-clone-6/", "categories": "Development, Clone", "tags": "typescript, next.js, emotion, nest.js", "date": "2021-06-01 04:53:00 +0000", "snippet": "오늘은 헤더 컴포넌트를 구현하고 이메일 인증 기능, 회원가입 기능을 구현하였다.헤더 컴포넌트친구목록과 채팅목록에서 모두 사용하는 헤더 컴포넌트를 구현하였다. title과 children을 props로 받아 구현하였고, position을 fix로 고정시켜 항상 상단에 유지되게 구현하였다.메인페이지에 헤더를 달아 보았다. 지금보니 헤더의 크기가 조금 작은 것 같다. 크기를 좀더 크게 수정해야 겠다.환경변수 설정.env를 통해 환경변수를 관리하기 위해 @nestjs/config패키지를 설치했다. 이후 app.module 파일의 im..." }, { "title": "[ToyProject] 카카오톡 클론 프로젝트(5)", "url": "/posts/kakao-clone-5/", "categories": "Development, Clone", "tags": "typescript, next.js, emotion", "date": "2021-05-28 07:22:00 +0000", "snippet": "오늘은 프로필 페이지 UI를 구현하고 메인에서 친구 목록 카드 UI에 대해 만들어 보았다.프로필 페이지이미지 컴포넌트와 버튼 컴포넌트를 조합하여 프로필 페이지를 구현하였고, 상단의 X버튼은 router.back()를 통해 뒤로가기 버튼으로 만들어 주었다.Image Component이미지 컴포넌트로 name, imageUrl을 props로 내려주는데 imageUrl이 없으면 3항 연산자를 사용해서 기본 이미지로 SVG ICON 컴포넌트를 렌더링 해주었다.// Profile/ImageComponent&amp;lt;Container..." }, { "title": "[Interview] 네트워크/HTML/Browser 면접 예상 질문", "url": "/posts/interview-2/", "categories": "Interview", "tags": "interview, network, Browser, html", "date": "2021-05-27 10:12:00 +0000", "snippet": "네트워크대칭키와 비 대칭키(공개키)에 대해 설명해주세요대칭키 : 암호화, 복호화에 사용하는 키가 동일한 방식으로 속도가 빠르다는 장점이 있지만, 같은 키를 사용하기 위해서 키를 교환해야한다는 문제가 발생한다. 키를 교환하는 중 키가 탈취될 수 있다.비 대칭키 : 암호화, 복호화에 사용되는 키가 서로 달라 비 대칭키라고 한다. 대칭키의 키 교환 문제를 해결하기 위해 등장했으며, 이름 그대로 키가 공개되어있기 떄문에 키를 교환할 필요가 없다. 하지만 키의 길이가 길고 복합한 수학적 연산을 해야되기 떄문에 암호화, 복호화 속도가 느..." }, { "title": "[Interview] JavaScript/React 면접 예상 질문", "url": "/posts/js-react-interview/", "categories": "Interview", "tags": "interview, javascript, react", "date": "2021-05-26 12:20:00 +0000", "snippet": "질문에 대한 답은 주관적으로 저의 생각을 적은 것이기 떄문에 정답이 아닐 수 도 있습니다. 만약 틀린경우 알려주시면 감사하겠습니다.질문은 실제 면접에서 받은 질문과 인터넷 검색 등을 통해 제 나름대로 만들어본 질문입니다. 참고 용도로 보시면 좋을 것 같습니다.JavaScriptthis this 란? this는 일반적으로 메소드를 호출한 객체가 저장된 속성. 자신이 속한 객체 또는 자신이 생성할 인스턴트를 가르키는 자기 참조 변수 this는 어떻게 결정될까? this는 함수 호출 방식에 따라..." }, { "title": "[ToyProject] 카카오톡 클론 프로젝트(4)", "url": "/posts/kakao-clone-4/", "categories": "Development, Clone", "tags": "typescript, next.js, emotion", "date": "2021-05-25 06:21:00 +0000", "snippet": "오늘은 회원가입 부분을 완료하려고 했지만 면접 준비를 조금 해야 될 것 같아서 회원가입 페이지 UI만 만들어 보았다.여러개 input창 관리여러개의 input창을 관리하기 위해서 여러개의 useState를 사용했는데, 구글에 검색해보니 이 방법은 좋은 방법이 아니라고해서, blog를 보고 수정했다.하나의 useState안에 객체로 값을 저장하고, 각 input 태그에 name을 주고 event.target에서 name와 value를 통해 객체를 업데이트 시켜주는 방법이였다export default () =&amp;gt; {co..." }, { "title": "[JavaScript] 실행 컨텍스트", "url": "/posts/js-exec-context/", "categories": "Study, JavaScript", "tags": "javascript", "date": "2021-05-24 12:35:00 +0000", "snippet": "실행 컨텍스트실행 컨텍스트란?실행 컨텍스트는 scope, hosting, this, function, closure 등 동작원리를 담고 있는 자바스크립트의 핵심원리이다.ECMAScript 스펙에 따르면 실행 가능한 코드를 형상화하고 구분하는 추상적인 개념으로, 실행 가능한 코드가 실행되기 위해 필요한 환경이라고 할 수 있다.실행 가능한 코드 전역 코드 : 전역 영역에 존재하는 코드 Eval 코드 : eval 함수로 실행되는 코드 함수 코드 : 함수 내에 존재하는 코드일반적으로 실행 가능한 코드는 전역 코드와 함수 내 코드..." }, { "title": "[ToyProject] 카카오톡 클론 프로젝트(3)", "url": "/posts/kakao-clone-3/", "categories": "Development, Clone", "tags": "nest.js, typescript, eslint, preitter, next.js, emotion, apollo-client", "date": "2021-05-24 06:21:00 +0000", "snippet": "오늘은 로그인 페이지 UI와 로그인 API를 구현해 보았다.로그인 페이지 UI먼저 로그인 페이지 UI를 구현해 보았다. 처음 emotion을 사용하는데 emotion/styled를 사용하니 styled-components를 사용하는 것과 같은 방식으로 사용하면 되어서 어려운 점은 없었다.이메일과 비밀번호를 입력받을 input창과 로그인 버튼을 하나의 컴포넌트로 만들고, 카카오톡 로고를 하나의 컴포넌트로 만들어 두개를 합쳐 로그인 페이지를 만들었다. input창을 만들 때 useState와 useRef중 뭘 사용해야 더 좋을지 ..." }, { "title": "[ToyProject] 카카오톡 클론 프로젝트(2)", "url": "/posts/kakao-clone-2/", "categories": "Development, Clone", "tags": "nest.js, typescript, eslint, preitter", "date": "2021-05-23 11:21:00 +0000", "snippet": "어제는 NEXT.js 프로젝트 설정을 했고, 오늘은 프로젝트 기획서, 백로그 등 필요한 문서를 위키에 작성한 다음 Nest.js로 백엔드 프로젝트 설정을 할 예정이다.기획서FE-백로그BE-백로그NestJSNestJS는 express 기반으로 제작되었으며, node.js에 백엔드를 구성할 수 있도록 해준다. 기본적으로 typescript를 지원한다. 타입스크립트를 기본적으로 지원하기 때문에 NextJS를 선택하였으며, express말고 다른 프레임 워크를 사용해 보고싶었기 때문에 NestJS를 사용하기로 마음 먹었다.실제 프로젝..." }, { "title": "[ToyProject] 카카오톡 클론 프로젝트(1)", "url": "/posts/kakao-clone-1/", "categories": "Development, Clone", "tags": "next.js, typescript, eslint, preitter", "date": "2021-05-22 10:21:00 +0000", "snippet": "이전부터 소켓통신으로 프로젝트를 하나 진행해보고 싶다는 생각을 하고있어서 카카오톡 클론 프로젝트를 진행하기로 했다.오늘은 프론트엔드 선택한 기술에 대한 이유와 간단한 환경 설정에 대해서 포스팅하려고 한다.개발 스택현재 프론트엔드 개발 스택은 NEXT.js, emotion, storyBook, Apollo-Client를 사용하는 것으로 결정했다. 이전에 프로젝트를 하면서 사용해본 기술스택을 사용해보고, 추후 다른 기술 스택을 사용해서 변경해볼 예정이다.백엔드는 Nest와 GraphQL을 사용하고 db로는 MongoDB를 사용할 ..." }, { "title": "[JavaScript] 자바스크립트 Scope", "url": "/posts/js-scope/", "categories": "Study, JavaScript", "tags": "javascript", "date": "2021-05-21 06:48:00 +0000", "snippet": "JavaScript의 핵심 개념 중 하나인 Scope에 대해 알아보자!스코프 (Scope) 스코프 : 스코프는 참조 대상 식별자(identifier, 변수, 함수의 이름과 같이 어떤 대상을 다른 대상과 구분하여 식별할 수 있는 유일한 이름)를 찾아내기 위한 규칙var x = &quot;global&quot;;function foo() { var x = &quot;function scope&quot;; console.log(x);}foo(); // function scopeconsole.log(x); // global이..." }, { "title": "[JavaScript] var, let, const 차이", "url": "/posts/js-variables/", "categories": "Study, JavaScript", "tags": "javascript", "date": "2021-05-20 04:10:00 +0000", "snippet": "JavaScript에는 var, let, const 세 가지로 변수 선언을 할 수있다. 각각의 차이점에 대해 알아보자.1. 변수 선언 방식var 변수는 재선언이 가능하다.var name = &quot;joojaewoo&quot;;console.log(name); // joojaewoovar name = &quot;joo&quot;;console.log(name); // joo변수를 한 번 더 선언했음에도 불구하고, 서로 다른값이 잘 출력된다.유연하게 사용될 수도 있지만, 코드량이 많아진다면 어디서 선언되었고 어떻게 사용되는지 ..." }, { "title": "[프로그래머스] LV.4 징검다리 (JS) ", "url": "/posts/rock/", "categories": "Study, Algorithm", "tags": "binary search, programmers, algorithm, javascript", "date": "2021-05-19 10:20:00 +0000", "snippet": "문제출발지점부터 distance만큼 떨어진 곳에 도착지점이 있습니다. 그리고 그사이에는 바위들이 놓여있습니다. 바위 중 몇 개를 제거하려고 합니다.예를 들어, 도착지점이 25만큼 떨어져 있고, 바위가 [2, 14, 11, 21, 17] 지점에 놓여있을 때 바위 2개를 제거하면 출발지점, 도착지점, 바위 간의 거리가 아래와 같습니다. 제거한 바위의 위치 각 바위 사이의 거리 거리의 최솟값 [21, 17] [2, 9, 3, 11] 2 ..." }, { "title": "[TypesScript] 타입스크립트 기초 공부", "url": "/posts/typeScript/", "categories": "Study, TypeScript", "tags": "typescript", "date": "2021-05-18 08:10:00 +0000", "snippet": "타입스크립트란?타입스크립트는 자바스크립트에 타입을 부여한 언어이다. 자바스크립트의 확장된 언어라고 볼 수 있다. 타입스크립트는 자바스크립트와 달리 브라우저에서 실행하려면 변환을 해줘야 하고, 이 과정을 컴파일(compile) 라고 부른다.타입스크립트를 사용하는 이유?에러의 사전방지동적인 자바스크립트에 정적 타입을 지원하여 에러를 사전에 미리 방지할 수 있다.// javascriptconst sum = (a, b) =&amp;gt; a + b;sum(10, 20); // 30sum(&quot;10&quot;, &quot;20&q..." }, { "title": "[프로그래머스] LV.3 110 옮기기 (JS) ", "url": "/posts/110/", "categories": "Study, Algorithm", "tags": "stack, programmers, algorithm, javascript", "date": "2021-05-17 12:51:00 +0000", "snippet": "문제0과 1로 이루어진 어떤 문자열 x에 대해서, 당신은 다음과 같은 행동을 통해 x를 최대한 사전 순으로 앞에 오도록 만들고자 합니다. x에 있는 “110”을 뽑아서, 임의의 위치에 다시 삽입합니다.예를 들어, x = “11100” 일 때, 여기서 중앙에 있는 “110”을 뽑으면 x = “10” 이 됩니다. 뽑았던 “110”을 x의 맨 앞에 다시 삽입하면 x = “11010” 이 됩니다.변형시킬 문자열 x가 여러 개 들어있는 문자열 배열 s가 주어졌을 때, 각 문자열에 대해서 위의 행동으로 변형해서 만들 수 있는 문자열 중..." }, { "title": "[프로그래머스] LV.3 입국심사 (JS) ", "url": "/posts/Immigration/", "categories": "Study, Algorithm", "tags": "binary search, programmers, algorithm, javascript", "date": "2021-05-16 01:13:00 +0000", "snippet": "문제n명이 입국심사를 위해 줄을 서서 기다리고 있습니다. 각 입국심사대에 있는 심사관마다 심사하는데 걸리는 시간은 다릅니다.처음에 모든 심사대는 비어있습니다. 한 심사대에서는 동시에 한 명만 심사를 할 수 있습니다. 가장 앞에 서 있는 사람은 비어 있는 심사대로 가서 심사를 받을 수 있습니다. 하지만 더 빨리 끝나는 심사대가 있으면 기다렸다가 그곳으로 가서 심사를 받을 수도 있습니다.모든 사람이 심사를 받는데 걸리는 시간을 최소로 하고 싶습니다.입국심사를 기다리는 사람 수 n, 각 심사관이 한 명을 심사하는데 걸리는 시간이 담..." }, { "title": "[Web] Intersection Observer을 사용한 무한스크롤", "url": "/posts/infinityScroll/", "categories": "Study, Web", "tags": "infinity scroll, intersection observer", "date": "2021-05-15 07:10:00 +0000", "snippet": "Intersection Observer IntersectionObserver은 타겟 엘리먼트와 타겟의 부모 혹은 상위 엘리먼트의 뷰포트가 교차되는 부분을 비 동기적으로 관찰하는 API ViewPort뷰 포트는 현재 화면에 보여지고 있는 다각형의 영역즉, Intersection Observer이란 화면에 내가 지정한 타겟 엘리먼트가 보이는지를 비동기적으로 관찰하는 API이다.Intersection Observer vs Scroll EventIntersection Observer로 무한 스크롤을 구현할 때 어떤 장점이 있을지 ..." }, { "title": "[Web] HTML 공부", "url": "/posts/html/", "categories": "Study, Web", "tags": "html", "date": "2021-05-14 05:10:00 +0000", "snippet": "HTML 이란? HyperText Markup Language는 프로그래밍 언어가 아니라, 웹 페이지가 어떻게 구조화되어 있는지 브라우저로 하여글 알 수 있도록 하는 마크업 언어.HTML 문서의 기본 구조&amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&quot;utf-8&quot; /&amp;gt; &amp;lt;title&amp;gt;HTML&amp;lt;/title&amp;gt; &amp;l..." }, { "title": "[CS] 네트워크", "url": "/posts/network/", "categories": "Study, CS", "tags": "network", "date": "2021-05-13 05:10:00 +0000", "snippet": "OSI 7계층7계층을 나누는 이유 통신이 일어나는 과정을 단계별로 알 수 있고, 특정한 곳에 이상이 생기면 그 단계만 수정할 수 있기 떄문 물리 계층 케이블, 허브 데이터를 전기적인 신호로 변환해서 주고 받는 기능을 진행하는 공간 데이터 링크 계층 물리 계층으로 송 수신되는 정보를 관리하여 안전하게 전달되도록 도와주는 역할 비 신뢰적 물리 회선을 신뢰적 링크로 변환 Mac 주소를 통해 통신 프레임에 Mac 주소를 부여하고 에러검출, 재전송, 흐..." }, { "title": "[프로그래머스] LV.3 블록 이동하기 (JS) ", "url": "/posts/blockMove/", "categories": "Study, Algorithm", "tags": "bfs, programmers, algorithm, javascript", "date": "2021-05-12 10:13:00 +0000", "snippet": "문제로봇개발자 “무지”는 한 달 앞으로 다가온 “카카오배 로봇경진대회”에 출품할 로봇을 준비하고 있습니다. 준비 중인 로봇은 2 x 1 크기의 로봇으로 “무지”는 “0”과 “1”로 이루어진 N x N 크기의 지도에서 2 x 1 크기인 로봇을 움직여 (N, N) 위치까지 이동 할 수 있도록 프로그래밍을 하려고 합니다. 로봇이 이동하는 지도는 가장 왼쪽, 상단의 좌표를 (1, 1)로 하며 지도 내에 표시된 숫자 “0”은 빈칸을 “1”은 벽을 나타냅니다. 로봇은 벽이 있는 칸 또는 지도 밖으로는 이동할 수 없습니다. 로봇은 처음에 ..." }, { "title": "[CS] 운영체제", "url": "/posts/OS/", "categories": "Study, CS", "tags": "os", "date": "2021-05-12 07:10:00 +0000", "snippet": "프로세스와 스레드 프로세스: 실행되고 있는 프로그램, 메모리에 올라와 실행되는 인스턴스스레드: 프레세스 안에서 실행되는 흐름 단위 기본적으로 프로세스마다 최소 1개의 스레드 보유 프로세스는 각각 별도의 주소공간 할당 Code: 코드 자체를 구성하는 메모리 영역 ( 프로그램 명령 ) Data: 전역변수, 정적변수, 배열 등 (초기화 된 데이터) Heap: 동적 할당시 사용 (new, malloc) Stack: 지역변수, 매개변수, 리턴 값 ( 임시 메모리 영역 ) 스레..." }, { "title": "[Web] Node.js 특징 및 장 단점", "url": "/posts/node-js/", "categories": "Study, Web", "tags": "backend", "date": "2021-05-11 07:42:00 +0000", "snippet": "Node.js란? Node.js는 구글 크롬의 Javascript 엔진(V8 Engine)으로 빌드된 JavaScript 런타임 이다.Node.js 특징 Non blocking IO / Async (비동기) I/O가 끝날 때 까지 기다리지 않고 바로 밑의 코드를 실행 Node.js 표준 라이브러리의 모든 I/O 메서드는 논 블로킹 비동기 방식을 제공하고 콜백 함수를 받는다. 동기/비동기, block/non-block 차이block/non-block는 호출되는 함수가 바..." }, { "title": "[Blog] Jekyll의 chirpy테마로 개발자 블로그 만들기", "url": "/posts/startBlog/", "categories": "Development, Blog", "tags": "jekyll, github page, chirpy", "date": "2021-05-10 14:38:00 +0000", "snippet": "블로그를 만들기 위해 여러가지 플랫폼을 비교해보았지만 개발자라면 역시 깃허브 블로그라고 생각했다.http://jekyllthemes.org/ 에서 테마를 고르다가 chirpy 테마가 깔끔하기도 하고, 태그와 카테고리별로 글을 볼수 있어서 선택하였다.오늘은 내가 블로그를 만들었던 과정에 대해서 적어볼 것 이다.포스팅을 하면서 내가 했던 과정이나 실수등을 기록하며 다시한번 복기도 하고, 혹시 누군가게 도움이… 될수도 있지 않을까 해서 작성한다.Jekyll 블로그 생성하기 Git 설치 및 Clone 먼저 G..." } ]
